<?xml version="1.0" encoding="utf-8"?>

<?define ProductName = "tcpTrigger" ?>
<?define ProductManufacturer = "Ryan Smith" ?>
<?define ProductVersion = "1.3.0" ?>

<!-- Starting with tcpTrigger version 1.3.0:                                                         -->
<!--     A new 64-bit MSI installer is introduced. Prior installers for tcpTrigger were 32-bit only. -->
<!--     The 64-bit installer uses the same UpgradeCode as the original 32-bit installer.            -->
<!--     The 32-bit installer has a new UpgradeCode, so Windows considers it a separate product.     -->
<!--     This results in an upgrade path where when upgrading from a prior (32-bit) version,         -->
<!--     you will be upgraded to the 64-bit version.                                                 -->
<!--     There is no upgrade path to remain on the 32-bit version.                                   -->


<!-- ************************************************************************************* -->
<!--                                                                                       -->
<!-- IMPORTANT: Generate new ProductId GUIDs for both x86 and x64 for every major release. -->
<!--                                                                                       -->
<!-- ************************************************************************************* -->
<?if $(var.Platform) = x64 ?>
<?define ProductId = "{F1F91D9A-FC63-450F-9EDC-0CEC584EFC13}" ?>
<?define ProductUpgradeCode = "{68A80CF7-645A-48A6-9B13-BE7D639D519B}" ?>
<?define Win64 = "yes" ?>
<?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
<?define ProductDisplayName = "$(var.ProductName)" ?>
<?else ?>
<?define ProductId = "{24BD9DA2-2ED3-46CD-879A-5AD12763035B}"?>
<?define ProductUpgradeCode = "{7FEBF1AD-0417-4A10-A6EF-8046C5BBB8EB}" ?>
<?define Win64 = "no" ?>
<?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
<?define ProductDisplayName = "$(var.ProductName) 32-bit" ?>
<?endif ?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:fire="http://schemas.microsoft.com/wix/FirewallExtension"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <Product Name="$(var.ProductDisplayName)"
           Manufacturer="$(var.ProductManufacturer)"
           Version="$(var.ProductVersion)"
           Id="$(var.ProductId)"
           UpgradeCode="$(var.ProductUpgradeCode)"
           Language="1033" Codepage="1252">

    <Package Id="*" Keywords="Installer" InstallerVersion="300" Compressed="yes"
             Languages="1033" SummaryCodepage="1252"
             InstallPrivileges="elevated" InstallScope="perMachine" />

    <!-- Allow upgrades and prevent downgrades -->
    <MajorUpgrade DowngradeErrorMessage="A later version of [ProductName] is already installed. Setup will now exit."
                  Schedule="afterInstallFinalize" />

    <Media Id="1" Cabinet="tcptrigger.cab" EmbedCab="yes" />

    <!-- WiX UI -->
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="Launch the tcpTrigger configuration manager" />
    <Property Id="WixShellExecTarget" Value="[#tcpTrigger.Editor.exe]" />
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX" Value="1" />
    <CustomAction Id="LaunchApplication" BinaryKey="WixCA" DllEntry="WixShellExec" Impersonate="yes" />
    <UIRef Id="WixUI_InstallDir" />
    <UI>
      <UIRef Id="WixUI_InstallDir" />
      <Publish Dialog="WelcomeDlg"
               Control="Next"
               Event="NewDialog"
               Value="InstallDirDlg"
               Order="2">1</Publish>
      <Publish Dialog="InstallDirDlg"
               Control="Back"
               Event="NewDialog"
               Value="WelcomeDlg"
               Order="2">1</Publish>
      <Publish Dialog="ExitDialog"
               Control="Finish"
               Event="DoAction"
               Value="LaunchApplication">WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed</Publish>
    </UI>

    <!-- Check for .NET EventLogMessages.dll -->
    <Property Id="DOTNET4EVENTLOGMESSAGES_EXISTS">
      <DirectorySearch Id="SystemFolderDriverVersion" Path="[WindowsFolder]\Microsoft.NET\Framework\v4.0.30319" Depth="0">
        <FileSearch Name="EventLogMessages.dll"/>
      </DirectorySearch>
    </Property>

    <!-- Define the directory structure -->
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.PlatformProgramFilesFolder)">
        <Directory Id="INSTALLFOLDER" Name="$(var.ProductName)">

          <!-- Installation components -->
          <Component Id="MainExecutable" Guid="{F4E5590B-B4A7-4A74-A5D8-E91AB7A05014}" Win64="$(var.Win64)">
            <File Id="tcpTrigger.exe" Source="$(var.tcpTrigger.TargetPath)" Vital="yes" KeyPath="yes">

              <!-- Add a Windows firewall exception for tcpTrigger.exe -->
              <fire:FirewallException Id="FirewallException" Name="$(var.ProductName)" Scope="any" IgnoreFailure="yes" />
            </File>

            <!-- Install tcpTrigger as a Windows service -->
            <ServiceInstall Name="$(var.ProductName)"
                            DisplayName="$(var.ProductName)"
                            Type="ownProcess"
                            Description="Carries out tasks based on incoming network connections"
                            Start="auto"
                            Vital="yes"
                            Account="NT AUTHORITY\LocalService"
                            ErrorControl="normal" />

            <!-- Start the service -->
            <ServiceControl Id="StartService"
                            Start="install"
                            Stop="both"
                            Remove="uninstall"
                            Name="tcpTrigger"
                            Wait="no" />
          </Component>


          <!-- Register Windows event log source -->
          <Component Id="CreateEventSourceDotNet4" Guid="{BC256F58-832A-4F03-806A-3B86D730EF21}" Win64="$(var.Win64)">
            <!-- If the .NET 4.x EventLogMessages.dll exists, use it to register the EventSource -->
            <Condition>DOTNET4EVENTLOGMESSAGES_EXISTS</Condition>
            <CreateFolder/>
            <util:EventSource Name="$(var.ProductName)"
                              Log="Application"
                              EventMessageFile="%SystemRoot%\Microsoft.NET\Framework\v4.0.30319\EventLogMessages.dll" />
          </Component>
          <Component Id="CreateEventSourceDotNet35" Guid="{8DEB8041-F204-4FF0-AC8C-C6D3A8592613}" Win64="$(var.Win64)">
            <!-- If the .NET 4.x EventLogMessage.dll does not exist, use the .NET 2.x dll to register the EventSource -->
            <Condition>NOT DOTNET4EVENTLOGMESSAGES_EXISTS</Condition>
            <CreateFolder/>
            <util:EventSource Name="$(var.ProductName)"
                              Log="Application"
                              EventMessageFile="%SystemRoot%\Microsoft.NET\Framework\v2.0.50727\EventLogMessages.dll" />
          </Component>

          <!-- Install the settings editor GUI (tcpTrigger Manager) -->
          <Component Id="ConfigurationEditor" Guid="{E326FFDE-ED02-4C1D-AF5D-C2BFD002C2CB}" Win64="$(var.Win64)">
            <File Id="tcpTrigger.Editor.exe" Source="$(var.tcpTrigger.Editor.TargetPath)" KeyPath="yes" />
          </Component>
          
          <!-- Install the log monitoring utility (tcpTrigger Monitor) -->
          <Component Id="LogMonitor" Guid="{93A20328-44CB-49FB-B6B4-B66BBC38F1AA}" Win64="$(var.Win64)">
            <File Id="tcpTrigger.Monitor.exe" Source="$(var.tcpTrigger.Monitor.TargetPath)" KeyPath="yes" />
          </Component>
        </Directory>
      </Directory>
      
      <!-- Create desktop shortcuts -->
      <Directory Id="DesktopFolder" Name="Desktop">
        <Component Id="ApplicationShortcutDesktop" Guid="*">
          <!-- tcpTrigger Manager.exe shortcut -->
          <Shortcut Id="EditorDesktopShortcut"
                    Name="tcpTrigger Manager"
                    Description="Configuration editor for the tcpTrigger service"
                    Target="[INSTALLFOLDER]tcpTrigger Manager.exe"
                    WorkingDirectory="INSTALLFOLDER" />
          <!-- tcpTrigger Monitor.exe shortcut -->
          <Shortcut Id="MonitorDesktopShortcut"
                    Name="tcpTrigger Monitor"
                    Description="Log viewer for the tcpTrigger service"
                    Target="[INSTALLFOLDER]tcpTrigger Monitor.exe"
                    WorkingDirectory="INSTALLFOLDER" />
          <!-- Remove shortcuts on uninstall -->
          <RemoveFolder Id="DesktopFolder" On="uninstall" />
          <!-- Create a dummy registry entry because shortcuts cannot be KeyPaths. -->
          <!-- Strange, but the technique is used in WiX's official documentation. -->
          <RegistryValue Root="HKCU"
                         Key="Software\tcpTrigger"
                         Name="installed"
                         Type="integer"
                         Value="1"
                         KeyPath="yes" />
        </Component>
      </Directory>

      <!-- Define ProgramData folders for storing tcpTrigger config and logs -->
      <Directory Id="CommonAppDataFolder">
        <Directory Id="ProgramDataTcpTriggerFolder" Name="tcpTrigger">
          <!-- Create ProgramData\tcpTrigger folder and set permissions -->
          <Component Id="CreateProgramDataFolder" Guid="{9D4FBF18-254D-4CBD-87D2-406EF81B9E95}" Win64="$(var.Win64)">
            <CreateFolder>
              <!--
              <Permission User="Administrators" FileAllRights="yes"/>
              <Permission User="Users" GenericRead="yes" GenericExecute="yes" />
              -->
              <util:PermissionEx User="NT Authority\Local Service" GenericAll="yes"/>
            </CreateFolder>
          </Component>
        </Directory>
      </Directory>
    </Directory>

    <!-- Install the components -->
    <Feature Id="FullInstallation" Level="1">
      <ComponentRef Id="MainExecutable" />
      <ComponentRef Id="ConfigurationEditor" />
      <ComponentRef Id="LogMonitor" />
      <ComponentRef Id="ApplicationShortcutDesktop" />
      <ComponentRef Id="CreateProgramDataFolder" />
      <ComponentRef Id="CreateEventSourceDotNet35" />
      <ComponentRef Id="CreateEventSourceDotNet4" />
    </Feature>

    <!-- Add the icon used for add/remove programs and the desktop shortcut -->
    <Icon Id="tcpTrigger.ico" SourceFile="tcpTrigger.ico"/>
    <Property Id="ARPPRODUCTICON" Value="tcpTrigger.ico" />

  </Product>
</Wix>